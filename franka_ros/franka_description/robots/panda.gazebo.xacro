<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:macro name="panda_gazebo" params="robot_name">

        <!-- Link0 -->
        <gazebo reference="${robot_name}_link0">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link1 -->
        <gazebo reference="${robot_name}_link1">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link2 -->
        <gazebo reference="${robot_name}_link2">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link3 -->
        <gazebo reference="${robot_name}_link3">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link4 -->
        <gazebo reference="${robot_name}_link4">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link5 -->
        <gazebo reference="${robot_name}_link5">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link6 -->
        <gazebo reference="${robot_name}_link6">
            <material>Gazebo/White</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link7 -->
        <gazebo reference="${robot_name}_link7">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- Link8 -->
        <gazebo reference="${robot_name}_link8">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- LinkHand -->
        <gazebo reference="${robot_name}_hand">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- LinkRightFinger -->
        <gazebo reference="${robot_name}_rightfinger">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- LinkLeftFinger -->
        <gazebo reference="${robot_name}_leftfinger">
            <material>Gazebo/Grey</material>
            <mu1>0.2</mu1>
            <mu2>0.2</mu2>
        </gazebo>

        <!-- camera simulator plug-in -->
	  <gazebo reference="${robot_name}_leftfinger">
	    <sensor type="camera" name="camera">
	      <update_rate>10</update_rate><!--10-->
	      <camera name="camera">
<!--<pose>0.0 0.0 0.1 0 -1.5708 0</pose>franka_cal_sim-->
<pose>0.0 0.0 0.1 3.14 0 0</pose><!--franka_cal_sim_simple-->
<horizontal_fov>1.01566757779</horizontal_fov>
		<image>
		  <width>640</width>
		  <height>480</height>
		  <format>R8G8B8</format>
		</image>
		<clip>
		  <near>0.005</near>
		  <far>100</far>
		</clip>
                <distortion>
<k1>-0.017078844543599224</k1>
<k2>-0.02676711619806533</k2>
<k3>0.0</k3>
<p1>-0.0000</p1>
<p2>-0.0000</p2>
<center>0.4859853453811046 0.5314386364073282</center>
          </distortion>
		<noise>
		  <type>gaussian</type>
		  <mean>0.0</mean>
		  <stddev>0.0</stddev>
		</noise>
<lens>
      <!-- type element is mandatory -->
      <type>custom</type>
      <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
      <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
      <custom_function>
        <c1>1.05</c1>
        <!-- linear scaling -->
        <c2>4</c2>
        <!-- angle scaling -->
        <f>1.0</f>
        <!-- one more scaling parameter -->
        <fun>tan</fun>
        <!-- one of sin,tan,id -->
      </custom_function>
      <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
      <!-- othervise it depends on lens type and custom function, if there is one -->
      <scale_to_hfov>true</scale_to_hfov>
      <!-- clip everything that is outside of this angle -->
      <cutoff_angle>3.1415</cutoff_angle>
      <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
      <env_texture_size>512</env_texture_size>
    </lens>
	      </camera>
	      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
		<alwaysOn>true</alwaysOn>
		<cameraName>simple_camera</cameraName>
		<imageTopicName>image_raw</imageTopicName>
		<cameraInfoTopicName>camera_info</cameraInfoTopicName>
		<frameName>camera_link</frameName>
                <hackBaseline>0.0</hackBaseline>
	      </plugin>
	    </sensor>
	  </gazebo>  

	<gazebo>
	<plugin name="imu_sim" filename="libhector_gazebo_ros_imu.so">
	  <updateRate>100.0</updateRate>
	  <updateRateHz>100.0</updateRateHz>
	  <bodyName>${robot_name}_rightfinger</bodyName>
	  <topicName>imu_real</topicName>
	  <rpyOffset>0 0 0</rpyOffset>
	  <serviceName>/imu/service</serviceName>
	  <accelOffset>0 0 0</accelOffset>
	  <accelDrift>0.006 0.006 0.006</accelDrift><!--0.006-->
	  <accelGaussianNoise>0.004 0.004 0.004</accelGaussianNoise><!--0.004-->
	  <rateDrift>0.000038785 0.000038785 0.000038785</rateDrift>
	  <rateGaussianNoise>0.0003394 0.0003394 0.0003394</rateGaussianNoise>
	  <yawOffset>0.0 0.0 0.0</yawOffset>
	  <yawDrift>0.0 0.0 0.0</yawDrift>
	  <yawDriftFrequency>0.0 0.0 0.0</yawDriftFrequency>
	  <yawGaussianNoise>0.0 0.0 0.0</yawGaussianNoise>
	  <gaussianNoise>0.0</gaussianNoise>
	</plugin>
	</gazebo>


    </xacro:macro>

</robot>

