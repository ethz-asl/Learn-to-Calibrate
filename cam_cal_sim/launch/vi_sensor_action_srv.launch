<?xml version="1.0"?>
<launch>

  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="basic"/>
  <arg name="namespace" default="$(arg mav_name)"/>
  <arg name="model" default="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="$(arg mav_name)"/>
  <arg name="wait_to_record_bag" default="false"/>
  <arg name="enable_mavlink_interface" default="false"/>

 <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="false"/>
    <!-- <arg name="gui" value="false"/> -->
    <!-- <arg name="verbose" value="true"/> -->
  </include>
 <!-- here we add our own models to the simulation
  <param name="robot_description" command="
    $(find xacro)/xacro '$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    enable_mavlink_interface:=$(arg enable_mavlink_interface)
    log_file:=$(arg log_file)
    wait_to_record_bag:=$(arg wait_to_record_bag)
    mav_name:=$(arg mav_name)
    namespace:=$(arg namespace)"
  />-->

<param name="tf_prefix" type="string" value="$(optenv ROS_NAMESPACE)" />

<param name="robot_description_board" command="$(find xacro)/xacro '$(find cam_cal_sim)/xacro/aprilgrid.xacro'" />

<!--add image node-->
<node name="image_view" pkg="image_view" type="image_view" args="image:=/firefly/vi_sensor/left/image_raw"/>

<!-- Spawn the aprilgrid into Gazebo -->
<node name="spawn_urdf_board" pkg="gazebo_ros" type="spawn_model" args="-param robot_description_board -urdf -model aprilgrid" />

<!-- Load the urdf into the parameter server.
<param name="my_robot_description" textfile="$(find cam_cal_sim)/xacro/vi_sensor_urdf/mav_with_vi_sensor.gazebo"/> -->

<!--add vi_sensor move node-->
<node name="control_trajectory" pkg="cam_cal_sim" type="cam_cal_sim_node_intsrvvi" output="screen"/>

<group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
      <arg name="z" value="1.0"/>
      <arg name="P" value="1.57"/>
      <arg name="Y" value="-1.57"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <!--<node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

</launch>
