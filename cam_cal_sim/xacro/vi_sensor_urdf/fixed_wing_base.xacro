<?xml version="1.0"?>
<!--
  Copyright 2016 Pavel Vechersky, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Macro for the inertia of a box -->
  <xacro:macro name="box_inertia" params="x y z mass">
    <inertia ixx="${0.0833333 * mass * (y*y + z*z)}" ixy="0.0" ixz="0.0"
      iyy="${0.0833333 * mass * (x*x + z*z)}" iyz="0.0"
      izz="${0.0833333 * mass * (x*x + y*y)}" />
  </xacro:macro>

  <!-- Macro for the inertia of a cylinder -->
  <xacro:macro name="cylinder_inertia" params="r h mass">
    <inertia ixx="${0.0833333 * mass * (3*r*r + h*h)}" ixy="0.0" ixz="0.0"
      iyy="${0.0833333 * mass * (3*r*r + h*h)}" iyz="0.0"
      izz="${0.5 * mass * r * r}" />
  </xacro:macro>

  <!-- Fixed-wing main body link -->
  <xacro:macro name="fixed_wing_base_macro"
    params="robot_namespace mass length width height color use_mesh_file 
      mesh_file aero_params_yaml vehicle_params_yaml is_input_joystick
      *origin *inertia">
    <link name="${robot_namespace}/base_link"></link>

    <joint name="${robot_namespace}/base_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${robot_namespace}/base_link" />
      <child link="${robot_namespace}/base_link_inertia" />
    </joint>

    <link name="${robot_namespace}/base_link_inertia">
      <inertial>
        <mass value="${mass}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}" scale="1 1 1" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <box size="${length} ${width} ${height}" />
          </xacro:unless>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${length} ${width} ${height}" />
        </geometry>
      </collision>
    </link>

    <gazebo reference="${robot_namespace}/base_link">
      <material>Gazebo/${color}</material>
    </gazebo>

    <!-- Attach fw_dynamics to the base_link -->
    <gazebo>
      <plugin filename="librotors_gazebo_fw_dynamics_plugin.so" name="fw_dynamics_plugin">
        <robotNamespace>${robot_namespace}</robotNamespace>
        <linkName>${robot_namespace}/base_link</linkName>
        <aeroParamsYAML>${aero_params_yaml}</aeroParamsYAML>
        <vehicleParamsYAML>${vehicle_params_yaml}</vehicleParamsYAML>
        <isInputJoystick>${is_input_joystick}</isInputJoystick>
      </plugin>
    </gazebo>
  </xacro:macro>

  <!-- Control surface joint and link -->
  <xacro:macro name="control_surface"
    params="robot_namespace surface_name parent mass_surface min_angle
      max_angle color use_mesh_file mesh_file surface_length surface_width
      surface_height *axis *joint_origin *link_origin *inertia">
    <joint name="${robot_namespace}/${surface_name}_joint" type="revolute">
      <xacro:insert_block name="joint_origin" />
      <xacro:insert_block name="axis" />
      <parent link="${parent}" />
      <child link="${robot_namespace}/${surface_name}" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>

    <link name="${robot_namespace}/${surface_name}">
      <inertial>
        <xacro:insert_block name="link_origin" />
        <mass value="${mass_surface}" />
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <xacro:insert_block name="link_origin" />
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}" scale="1 1 1" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <box size="${surface_length} ${surface_width} ${surface_height}" />
          </xacro:unless>
        </geometry>
      </visual>
      <collision>
        <xacro:insert_block name="link_origin" />
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}" scale="1 1 1" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <box size="${surface_length} ${surface_width} ${surface_height}" />
          </xacro:unless>
        </geometry>
      </collision>
    </link>

    <gazebo reference="${robot_namespace}/${surface_name}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

  <!-- Propeller joint and link -->
  <xacro:macro name="propeller"
    params="robot_namespace suffix parent mass_propeller propeller_radius color
      use_mesh_file mesh_file *origin *inertia">
    <joint name="${robot_namespace}/propeller_{suffix}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <parent link="${parent}" />
      <child link="${robot_namespace}/propeller_${suffix}" />
    </joint>

    <link name="${robot_namespace}/propeller_${suffix}">
      <inertial>
        <mass value="${mass_propeller}" />
        <xacro:insert_block name="inertia" />
      </inertial>
      <visual>
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}"
              scale="${propeller_radius} ${propeller_radius} ${propeller_radius}" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <cylinder length="0.005" radius="${propeller_radius}"/>
          </xacro:unless>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <xacro:if value="${use_mesh_file}">
            <mesh filename="${mesh_file}"
              scale="${propeller_radius} ${propeller_radius} ${propeller_radius}" />
          </xacro:if>
          <xacro:unless value="${use_mesh_file}">
            <cylinder length="0.005" radius="${propeller_radius}"/>
          </xacro:unless>
        </geometry>
      </collision>
    </link>

    <gazebo reference="${robot_namespace}/propeller_${suffix}">
      <material>Gazebo/${color}</material>
    </gazebo>
  </xacro:macro>

</robot>
